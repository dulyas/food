{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,aAAa;AACb;AACA,uBAAuB,UAAU,MAAM,SAAS;AAChD,8CAA8C,WAAW;AACzD,4CAA4C,WAAW;AACvD;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA,8CAA8C,IAAI,YAAY,WAAW;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,iCAAiC;AAC3D;AACA,YAAY;AACZ,QAAQ;AACR;AACA;AACA,4BAA4B,iCAAiC;AAC7D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;;;;;;;;AClEA;AACA,qDAAqD;AACrD,sBAAsB;AACtB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,KAAK;AACL;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,qDAAqD;AACrD,oCAAoC;AACpC,qEAAqE;AACrE;AACA,8DAA8D;AAC9D,sEAAsE;AACtE;AACA;AACA;AACA;AACA,yDAAyD;AACzD,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA,oBAAoB,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,iBAAiB;AACjB;AACA,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA,uCAAuC;AACvC,4DAA4D;AAC5D,qDAAqD;AACrD,0DAA0D;AAC1D,4DAA4D;AAC5D,yCAAyC;AACzC;AACA;AACA,yBAAyB;AACzB,4DAA4D;AAC5D;AACA,oBAAoB;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oDAAoD;AACpD,oCAAoC,QAAQ;AAC5C,aAAa;AACb;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,yDAAyD;AACzD;AACA,6BAA6B,aAAa;AAC1C,kBAAkB;AAClB;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCjDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBY;AACZ;AACA,aAAa,mBAAO,CAAC,4CAAgB;AACrC,aAAa,mBAAO,CAAC,4CAAgB;AACrC,cAAc,mBAAO,CAAC,8CAAiB;AACvC,cAAc,mBAAO,CAAC,8CAAiB;AACvC,cAAc,mBAAO,CAAC,8CAAiB;AACvC,eAAe,mBAAO,CAAC,gDAAkB;AACzC,cAAc,mBAAO,CAAC,8CAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/webpack/bootstrap","webpack://food/./js/script.js"],"sourcesContent":["function calc () {\r\n    \r\nconst calcRes = document.querySelector('.calculating__result span');\r\nlet sex = 'female', height, weight, age, ratio = 1.375;\r\n\r\nstaticInput('#gender', 'calculating__choose-item_active');\r\nstaticInput('.calculating__choose_big','calculating__choose-item_active');\r\ndinamicInput('#height');\r\ndinamicInput('#weight');\r\ndinamicInput('#age');\r\n\r\ndocument.addEventListener('click', () => {\r\n    console.log(sex, height, weight, age, ratio);\r\n})\r\n\r\nfunction calcKcal() {\r\n    if (!sex || !height || !weight || !age) {\r\n        calcRes.textContent = '...?'\r\n    } else if (sex == 'female') {\r\n        calcRes.textContent = Math.round(447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age) * ratio);\r\n    } else {\r\n        calcRes.textContent = Math.round(calcRes.textContent = 88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age) * ratio);\r\n    }\r\n    \r\n}\r\nfunction staticInput(selector, activeClass) {\r\n    const block = document.querySelectorAll(`${selector} div`);\r\n    block.forEach(item => {\r\n        item.addEventListener('click', (e) => {\r\n        if (e.target.getAttribute('data-ratio')) {\r\n            ratio = +e.target.getAttribute('data-ratio');\r\n            calcKcal();\r\n        } else {\r\n            sex = e.target.getAttribute('sex');\r\n            calcKcal();\r\n        }\r\n        \r\n        block.forEach(item => item.classList.remove(activeClass));\r\n\r\n        e.target.classList.add(activeClass);\r\n        \r\n        }\r\n        )\r\n    })\r\n}\r\nfunction dinamicInput(selector) {   \r\n const input = document.querySelector(selector);\r\n input.addEventListener('input', () => {\r\n     switch(input.getAttribute('id')) {\r\n         case 'height':\r\n             height = +input.value;\r\n             calcKcal();\r\n             break;\r\n         case 'weight':\r\n             weight = +input.value;\r\n             calcKcal();\r\n             break;\r\n         case 'age':\r\n             age = +input.value;\r\n             calcKcal();\r\n             break;         \r\n     }\r\n })\r\n\r\n}\r\n\r\n}\r\n\r\nmodule.exports = calc;","function cards() {\r\n    class FoodCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.transfer = 27;\r\n            this.changeToUAH();\r\n            this.parent = document.querySelector(parentSelector);\r\n        }\r\n        changeToUAH() {\r\n            this.price = this.price*this.transfer\r\n        }\r\n        render() {\r\n            const element = document.createElement('div');\r\n            if (this.classes.length === 0) {\r\n                this.class = 'menu__item';\r\n                element.classList.add(this.class);\r\n            } else {\r\n            this.classes.forEach(className => {\r\n                element.classList.add(className)\r\n            }) }\r\n            element.innerHTML = `\r\n            <img src=${this.src} alt=${this.alt}>\r\n            <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n            <div class=\"menu__item-descr\">${this.descr}</div>\r\n            <div class=\"menu__item-divider\"></div>\r\n            <div class=\"menu__item-price\">\r\n                <div class=\"menu__item-cost\">Цена:</div>\r\n                <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>`;\r\n            this.parent.append(element);\r\n\r\n        }\r\n    }\r\n\r\n    const getResource = async (url) => { // передаем ссылку на сервер и контент\r\n        const res = await fetch(url);\r\n        if (!res.ok) {\r\n           throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n            return await res.json();\r\n    };\r\n    // getResource('http://localhost:3000/menu').\r\n    // then(data => {\r\n    //     data.forEach(({img, altimg, title, descr, price}) => {\r\n    //         new FoodCard(img, altimg, title, descr, price, '.menu .container').render();\r\n    //     });\r\n    // });\r\n    axios.get('http://localhost:3000/menu').\r\n    then(data => {\r\n        data.data.forEach(({img, altimg, title, descr, price}) => {\r\n            new FoodCard(img, altimg, title, descr, price, '.menu .container').render();\r\n        });\r\n\r\n\r\n\r\n    // Forms\r\n\r\n\r\n\r\n})\r\n}\r\nmodule.exports = cards;","function forms() {\r\n    const forms = document.querySelectorAll('form'); // переносим все формы в переменную\r\n    const message = { // объект для сообщений ответа для пользователя\r\n        loading: '/icons/spin.svg', // анимация для загрузки\r\n        success: 'Спасибо! Скоро с Вами саяжутся',\r\n        failure: 'Что-то пошло не так'\r\n     }\r\n    forms.forEach(item => { // накладываем функцию postData на все формы на странице\r\n        bindPostData(item);\r\n    });\r\n\r\n        const postData = async (url, data) => { // передаем ссылку на сервер и контент\r\n            const res = await fetch(  // async и await нужны для того, чтобы асинхронный код выполнялся корректно, ибо в данном случае в res не будет ничего приходить async ставим перед аргументами а await перед асинхронными местами \r\n                url,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-type' : 'application/json'\r\n                    },\r\n                    body: data\r\n                }\r\n            );\r\n                return await res.json();\r\n        }\r\n\r\n        function bindPostData(form) { // функция будет отвечать за отправку данных на сервер?\r\n            form.addEventListener('submit', (e) => { // у кнопок тип submit стоит автоматически\r\n                e.preventDefault(); // убираем обычное поведение страницы при нажатии на кнопку (перезагрузку)\r\n                const statusMessage = document.createElement('img'); // создадим блок для сообщения пользователю\r\n                statusMessage.src = message.loading;\r\n                statusMessage.style.cssText = 'display:block; margin:0 auto' // добавим ему классов для оформления\r\n                form.insertAdjacentElement('afterend', statusMessage);// добавляем сообщение в конец формы\r\n\r\n\r\n\r\n\r\n                // const request = new XMLHttpRequest(); // создаем объект (позже перейдем на более современные варианты)\r\n                // request.open('POST', 'server.php'); // POST, ибо мы отправляем данные на сервер server.php \r\n\r\n                // меняем XMLHttp на fetch\r\n\r\n\r\n\r\n                // request.setRequestHeader('Content-type', 'application/json'); // для работы с json \r\n\r\n\r\n                \r\n                const formData = new FormData(form); // создаем переменную с конструктором FormData, в нее отправляем нашу форму\r\n                // const objectjs = {};\r\n                // formData.forEach(function(value, key){\r\n                //     objectjs[key] = value;\r\n                // }); // создаемобычный объект а не formData\r\n\r\n                const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n                //более простой способ перевести данные в json\r\n\r\n                // это минигайд как переделать formData в json\r\n                \r\n                \r\n\r\n                postData('http://localhost:3000/requests', json)\r\n                // .then(data => data.text()) // модифицируем наш ответ в виде текста init\r\n                .then(data => {\r\n                console.log(data);\r\n                showThankModal(message.success); // сообщение про успешную отправку\r\n                statusMessage.remove();\r\n                }).catch(() => {\r\n                showThankModal(message.failure);\r\n                }).finally(() => form.reset());// очистим форму )\r\n\r\n\r\n\r\n                // в инпутах всегда должен быть аттрибут name для отправки на сервер\r\n                // request.send(json); // отправка \r\n//                 request.addEventListener('load', () => { //обработчкик события при загрузке\r\n//                     if (request.status === 200) { // проверяем успешно или нет\r\n//                         console.log(request.response); // тест для меня в консоли\r\n//                         showThankModal(message.success); // сообщение про успешную отправку\r\n//                         form.reset(); // очистим форму \r\n//                             statusMessage.remove();;\r\n// // удаляем сообщение об отправке\r\n//                     } else {\r\n//                         showThankModal(message.failure); // сообщение об ошибке если что-то пошло не так\r\n//                     }\r\n//                 });\r\n            });\r\n        }\r\n\r\n    // оформление красивое для сообщения пользователю\r\n}\r\n\r\n\r\nfunction showThankModal(message) {\r\n    const prevModalDialog = document.querySelector('.modal__dialog');\r\n    prevModalDialog.classList.add('hide');\r\n    openModal(); // вызываем модальное окно без контента\r\n    const thanksModal = document.createElement('div');\r\n    thanksModal.classList.add('modal__dialog');\r\n    thanksModal.innerHTML = `\r\n    <div class=\"modal__content\">\r\n        <div class=\"modal__close\" data-close>&times;</div>\r\n        <div class=\"modal__title\">${message}</div>\r\n    </div>`; // меняем контент в модальном окне на наше сообщение\r\n\r\ndocument.querySelector('.modal').append(thanksModal); // вызываем\r\nsetTimeout(() => {\r\n    thanksModal.remove();\r\n    prevModalDialog.classList.add('show');\r\n    prevModalDialog.classList.remove('hide');\r\n    closeModal();\r\n}, 4000) // через 4 секунды мы прячем наше сообщение и возвращаем в модальное окно обычный ввод имя телефон, чтобы пользователь мог снова пользоваться кнокой связи\r\n};\r\n\r\n// тестовый фетч запрос\r\n// fetch('https://jsonplaceholder.typicode.com/posts', { // ссылка для отправления\r\n//     method: \"POST\", // настройки для fetch // метод\r\n//     body: JSON.stringify({name: 'Alex'}), // то, что отправляется в нужном формате\r\n//     headers: { // заголовки\r\n//         'Content-type' : 'application/json'\r\n//     }\r\n// })\r\n// .then(response => response.json())\r\n// .then(json => console.log(json));\r\n\r\nfetch('db.json').then(data => data.json()).then(res=>console.log(res));\r\n\r\n\r\nmodule.exports = forms;","function modal() {\r\n    \r\nconst modal = document.querySelectorAll('[data-modal]');\r\nconst active = document.querySelector('.modal'); \r\n//const modalClose = document.querySelector('[data-close]');\r\n//modalClose.addEventListener('click', () => {  \r\n//    closeModal();\r\n\r\n//})\r\n    modal.forEach((item) => {\r\n        item.addEventListener('click', () => {  \r\n            openModal();\r\n            })\r\n    })\r\n    function closeModal() {\r\n        active.classList.add('hide');\r\n        active.classList.remove('show');\r\n        document.body.style.overflow = '';\r\n    };\r\n    function openModal() {\r\n        active.classList.add('show');\r\n        active.classList.remove('hide');\r\n        document.body.style.overflow = 'hidden';\r\n        clearInterval(modaltimerId);\r\n        window.removeEventListener('scroll', showModalScroll);\r\n    };\r\n    active.addEventListener('click', (e) => {\r\n        if (e.target === active || e.target.getAttribute('data-close') == '') { //укоротили код и подстроили его под новый функционал\r\n            closeModal();\r\n        }\r\n    });\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === \"Escape\" && active.classList.contains('show')) {\r\n            closeModal();\r\n        }\r\n    });\r\n    const modaltimerId = setTimeout(openModal, 3000);\r\n\r\n    function showModalScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openModal();\r\n            window.removeEventListener('scroll', showModalScroll)\r\n        }\r\n    }\r\n    window.addEventListener('scroll', showModalScroll);\r\n}\r\nmodule.exports = modal;","function slider() {\r\n    \r\nconst slides = document.querySelectorAll('.offer__slide');\r\nconst next = document.querySelector('.offer__slider-next');\r\nconst prev = document.querySelector('.offer__slider-prev');\r\nlet slideIndex = 1;\r\nlet currentSlide = document.querySelector('#current');\r\n    function slideShow(n) {\r\n\r\n        slides.forEach(item => {\r\n            item.style.display = 'none';\r\n        });\r\n        slides[n-1].style.display = 'block';\r\n        currentSlide.textContent = `0${slideIndex}`;\r\n    }\r\n    slideShow(slideIndex);\r\n    next.addEventListener('click', () => {\r\n        if (slideIndex == 4) {\r\n            slideIndex = 0\r\n        } else {\r\n            slideIndex++;\r\n            slideShow(slideIndex);\r\n        }\r\n    });\r\n    prev.addEventListener('click', () => {\r\n        if (slideIndex == 1) {\r\n            slideIndex = 5\r\n        } else {\r\n            slideIndex--;\r\n            slideShow(slideIndex);\r\n        }\r\n    });\r\n\r\n\r\n};\r\nmodule.exports = slider;","function tabs() {\r\n//tabs\r\n\r\nconst TabsBtns = document.querySelectorAll('.tabheader__item'),\r\nTabsContents = document.querySelectorAll('.tabcontent'),\r\nBtnsParent = document.querySelector('.tabheader__items');\r\nhideTabContent();\r\nshowTabContent();\r\n\r\n\r\n\r\nfunction hideTabContent() {\r\nTabsContents.forEach(item => {\r\nitem.style.display = 'none';\r\nitem.classList.add('animate__fadeIn');\r\n})  \r\nTabsBtns.forEach(item => {\r\nitem.classList.remove('tabheader__item_active');\r\n})\r\n}\r\nfunction showTabContent(i = 0) {\r\nTabsContents[i].style.display = 'block';\r\nTabsBtns[i].classList.add('tabheader__item_active');\r\n} \r\n\r\nBtnsParent.addEventListener('click', (e)=> {\r\n// if (e.target.classList.contains('tabheader__item')) {\r\n  TabsBtns.forEach((item, i) => {\r\n      if (e.target == item) {\r\n          hideTabContent();\r\n          showTabContent(i);\r\n      }\r\n  })\r\n// }\r\n})\r\n};\r\n\r\nmodule.exports = tabs;","function timer() {\r\n    function getTimeRemaining(endtime) {\r\n        const t = Date.parse(endtime) - Date.parse(new Date()),\r\n        days = Math.floor(t / 1000 / 60 / 60 / 24),\r\n        hours = Math.floor((t / 1000 / 60 / 60) % 24),\r\n        minutes = Math.floor((t / 1000 / 60) % 60),\r\n        seconds = Math.floor((t / 1000) % 60);\r\n        \r\n        return {\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds,\r\n            'total': total\r\n        }\r\n    }\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else return num;\r\n    }\r\n    \r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n        days = timer.querySelector('#days'),\r\n        hours = timer.querySelector('#hours'),\r\n        minutes = timer.querySelector('#minutes'),\r\n        seconds = timer.querySelector('#seconds'),\r\n        timeInterval = setInterval(updateClock, 1000);\r\n        updateClock();\r\n        \r\n        function updateClock() {\r\n            const ms = getTimeRemaining(endtime);\r\n            days.innerHTML = getZero(ms.days);\r\n            hours.innerHTML = getZero(ms.hours);\r\n            minutes.innerHTML = getZero(ms.minutes);\r\n            seconds.innerHTML = getZero(ms.seconds);\r\n            if (ms.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    \r\n    \r\n    };\r\n    const deadline = '2021-12-5';\r\nsetClock('.timer', deadline);\r\n\r\n}\r\n\r\nmodule.exports = timer;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\"\r\ndocument.addEventListener('DOMContentLoaded', (e) => {\r\nconst tabs = require('./modules/tabs'),\r\n      calc = require('./modules/calc'),\r\n      cards = require('./modules/cards'),\r\n      forms = require('./modules/forms'),\r\n      modal = require('./modules/modal'),\r\n      slider = require('./modules/slider'),\r\n      timer = require('./modules/timer');\r\n\r\n      tabs();\r\n      calc();\r\n      cards();\r\n      forms();\r\n      modal();\r\n      slider();\r\n      timer();\r\n\r\n      \r\n\r\n\r\n})\r\n"],"names":[],"sourceRoot":""}